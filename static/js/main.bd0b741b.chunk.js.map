{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Choice","id","this","side","React","Component","Choices","Board","state","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4NAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKPC,E,4JACF,WACI,OACI,wBAAQH,UAAU,SAASI,GAAIC,KAAKN,MAAMO,KAA1C,SACKD,KAAKN,MAAMG,Y,GAJPK,IAAMC,WAUrBC,E,4JACF,WACI,OACI,sBAAKT,UAAU,UAAf,UACI,cAACG,EAAD,CAAQD,MAAM,IAAII,KAAK,SACvB,cAACH,EAAD,CAAQD,MAAM,IAAII,KAAK,iB,GALjBC,IAAMC,WAWtBE,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJM,E,+CAQnB,SAAYC,GACV,IAAMJ,EAAUP,KAAKM,MAAMC,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKX,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKc,SACH,CAACP,QAASA,EACVG,SAAUV,KAAKM,MAAMI,a,0BAIzB,SAAaC,GAAI,IAAD,OACd,OACE,cAAClB,EAAD,CACAI,MAAOG,KAAKM,MAAMC,QAAQI,GAC1Bf,QAAS,kBAAM,EAAKmB,YAAYJ,Q,oBAIpC,WACE,IACIK,EADEC,EAASJ,EAAgBb,KAAKM,MAAMC,SAQ1C,OALES,EADEC,EACO,WAAaA,EAEb,iBAAmBjB,KAAKM,MAAMI,QAAU,IAAM,KAIvD,gCACE,qBAAKf,UAAU,SAAf,SAAyBqB,IACzB,sBAAKrB,UAAU,YAAf,UACGK,KAAKkB,aAAa,GAClBlB,KAAKkB,aAAa,GAClBlB,KAAKkB,aAAa,MAErB,sBAAKvB,UAAU,YAAf,UACGK,KAAKkB,aAAa,GAClBlB,KAAKkB,aAAa,GAClBlB,KAAKkB,aAAa,MAErB,sBAAKvB,UAAU,YAAf,UACGK,KAAKkB,aAAa,GAClBlB,KAAKkB,aAAa,GAClBlB,KAAKkB,aAAa,a,GAtDThB,IAAMC,WA6DPD,IAAMC,UAgBzB,SAASU,EAAgBN,GAWvB,IAVA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAR,EAAI,EAAGA,EAAIQ,EAAMC,OAAQT,IAAK,CACrC,kBAAkBQ,EAAMR,GAAxB,GAAOU,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIhB,EAAQc,IAAMd,EAAQc,KAAOd,EAAQe,IAAMf,EAAQc,KAAOd,EAAQgB,GACpE,OAAOhB,EAAQc,GAGnB,OAAO,KAUTG,IAASC,OACL,cAACrB,EAAD,IACAsB,SAASC,eAAe,W","file":"static/js/main.bd0b741b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className='square' onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n\r\nclass Choice extends React.Component {\r\n    render() {\r\n        return (\r\n            <button className=\"choice\" id={this.props.side}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n};\r\n\r\nclass Choices extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"choices\">\r\n                <Choice value=\"A\" side=\"left\" />\r\n                <Choice value=\"B\" side=\"right\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squares = this.state.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState(\r\n      {squares: squares,\r\n      xIsNext: !this.state.xIsNext,}\r\n    )\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n      value={this.state.squares[i]} \r\n      onClick={() => this.handleClick(i)}/>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n  \r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    };\r\n  };\r\n  return null;\r\n};\r\n  \r\n  // ========================================\r\n  \r\n// ReactDOM.render(\r\n//     <Game />,\r\n//     document.getElementById('root')\r\n// );\r\n\r\nReactDOM.render(\r\n    <Choices />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}